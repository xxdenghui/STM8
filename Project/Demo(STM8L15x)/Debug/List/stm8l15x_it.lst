###############################################################################
#
# IAR C/C++ Compiler V3.10.1.201 for STM8                 22/Mar/2019  11:20:54
# Copyright 2010-2017 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for STMicroelectronics STM8
#
#    Source file  =  
#        G:\Darren\MCU\STM8\Software\Project\Demo(STM8L15x)\User\stm8l15x_it.c
#    Command line =  
#        -f C:\Users\new06\AppData\Local\Temp\EWB21B.tmp
#        ("G:\Darren\MCU\STM8\Software\Project\Demo(STM8L15x)\User\stm8l15x_it.c"
#        -e -On --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_cross_call --debug --code_model small --data_model medium -o
#        "G:\Darren\MCU\STM8\Software\Project\Demo(STM8L15x)\Debug\Obj"
#        --dlib_config "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\stm8\LIB\dlstm8smn.h" -D STM8L15 -lCN
#        "G:\Darren\MCU\STM8\Software\Project\Demo(STM8L15x)\Debug\List" -lB
#        "G:\Darren\MCU\STM8\Software\Project\Demo(STM8L15x)\Debug\List" -I
#        "G:\Darren\MCU\STM8\Software\Project\Demo(STM8L15x)\..\..\Libraries\STM8L15x_StdPeriph_Driver\inc\"
#        -I
#        "G:\Darren\MCU\STM8\Software\Project\Demo(STM8L15x)\..\..\Libraries\Device\"
#        -I
#        "G:\Darren\MCU\STM8\Software\Project\Demo(STM8L15x)\..\..\Libraries\HAL\"
#        -I
#        "G:\Darren\MCU\STM8\Software\Project\Demo(STM8L15x)\..\..\Libraries\Bus\"
#        -I
#        "G:\Darren\MCU\STM8\Software\Project\Demo(STM8L15x)\..\..\Libraries\CRC\"
#        -I "G:\Darren\MCU\STM8\Software\Project\Demo(STM8L15x)\User\" --vregs
#        16)
#    Locale       =  Chinese (Simplified)_CHN.936
#    List file    =  
#        G:\Darren\MCU\STM8\Software\Project\Demo(STM8L15x)\Debug\List\stm8l15x_it.lst
#    Object file  =  
#        G:\Darren\MCU\STM8\Software\Project\Demo(STM8L15x)\Debug\Obj\stm8l15x_it.o
#
###############################################################################

G:\Darren\MCU\STM8\Software\Project\Demo(STM8L15x)\User\stm8l15x_it.c
      1          /**
      2            ******************************************************************************
      3            * @file    GPIO/GPIO_Toggle/stm8l15x_it.c
      4            * @author  MCD Application Team
      5            * @version V1.5.2
      6            * @date    30-September-2014
      7            * @brief   Main Interrupt Service Routines.
      8            *          This file provides template for all peripherals interrupt service routine.
      9            ******************************************************************************
     10            * @attention
     11            *
     12            * <h2><center>&copy; COPYRIGHT 2014 STMicroelectronics</center></h2>
     13            *
     14            * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
     15            * You may not use this file except in compliance with the License.
     16            * You may obtain a copy of the License at:
     17            *
     18            *        http://www.st.com/software_license_agreement_liberty_v2
     19            *
     20            * Unless required by applicable law or agreed to in writing, software 
     21            * distributed under the License is distributed on an "AS IS" BASIS, 
     22            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     23            * See the License for the specific language governing permissions and
     24            * limitations under the License.
     25            *
     26            ******************************************************************************
     27            */ 
     28          
     29          /* Includes ------------------------------------------------------------------*/
     30          #include "stm8l15x_it.h"
     31          
     32          extern void TIme4_CallBack( void );
     33          /* Private typedef -----------------------------------------------------------*/
     34          /* Private define ------------------------------------------------------------*/
     35          /* Private macro -------------------------------------------------------------*/
     36          /* Private variables ---------------------------------------------------------*/
     37          /* Private function prototypes -----------------------------------------------*/
     38          /* Private functions ---------------------------------------------------------*/
     39          /* Public functions ----------------------------------------------------------*/
     40          
     41          #ifdef _COSMIC_
     42          /**
     43            * @brief Dummy interrupt routine
     44            * @param  None
     45            * @retval None
     46            */
     47          INTERRUPT_HANDLER(NonHandledInterrupt, 0)
     48          {
     49            /* In order to detect unexpected events during development,
     50               it is recommended to set a breakpoint on the following instruction.
     51            */
     52          }
     53          #endif
     54          
     55          /**
     56            * @brief TRAP interrupt routine
     57            * @param  None
     58            * @retval None
     59            */

   \                                 In section .near_func.text, align 1
     60          INTERRUPT_HANDLER_TRAP(TRAP_IRQHandler)
     61          {
     62            /* In order to detect unexpected events during development,
     63               it is recommended to set a breakpoint on the following instruction.
     64            */
     65          }
   \                     TRAP_IRQHandler:
   \                     _interrupt_1:
   \   000000 80           IRET
     66          /**
     67            * @brief FLASH Interrupt routine.
     68            * @param  None
     69            * @retval None
     70            */

   \                                 In section .near_func.text, align 1
     71          INTERRUPT_HANDLER(FLASH_IRQHandler, 1)
     72          {
     73            /* In order to detect unexpected events during development,
     74               it is recommended to set a breakpoint on the following instruction.
     75            */
     76          }
   \                     FLASH_IRQHandler:
   \                     _interrupt_3:
   \   000000 80           IRET
     77          /**
     78            * @brief DMA1 channel0 and channel1 Interrupt routine.
     79            * @param  None
     80            * @retval None
     81            */

   \                                 In section .near_func.text, align 1
     82          INTERRUPT_HANDLER(DMA1_CHANNEL0_1_IRQHandler, 2)
     83          {
     84            /* In order to detect unexpected events during development,
     85               it is recommended to set a breakpoint on the following instruction.
     86            */
     87          }
   \                     DMA1_CHANNEL0_1_IRQHandler:
   \                     _interrupt_4:
   \   000000 80           IRET
     88          /**
     89            * @brief DMA1 channel2 and channel3 Interrupt routine.
     90            * @param  None
     91            * @retval None
     92            */

   \                                 In section .near_func.text, align 1
     93          INTERRUPT_HANDLER(DMA1_CHANNEL2_3_IRQHandler, 3)
     94          {
     95            /* In order to detect unexpected events during development,
     96               it is recommended to set a breakpoint on the following instruction.
     97            */
     98          }
   \                     DMA1_CHANNEL2_3_IRQHandler:
   \                     _interrupt_5:
   \   000000 80           IRET
     99          /**
    100            * @brief RTC / CSS_LSE Interrupt routine.
    101            * @param  None
    102            * @retval None
    103            */

   \                                 In section .near_func.text, align 1
    104          INTERRUPT_HANDLER(RTC_CSSLSE_IRQHandler, 4)
    105          {
    106            /* In order to detect unexpected events during development,
    107               it is recommended to set a breakpoint on the following instruction.
    108            */
    109          }
   \                     RTC_CSSLSE_IRQHandler:
   \                     _interrupt_6:
   \   000000 80           IRET
    110          /**
    111            * @brief External IT PORTE/ PORTF and PVD Interrupt routine.
    112            * @param  None
    113            * @retval None
    114            */

   \                                 In section .near_func.text, align 1
    115          INTERRUPT_HANDLER(EXTIE_F_PVD_IRQHandler, 5)
    116          {
    117            /* In order to detect unexpected events during development,
    118               it is recommended to set a breakpoint on the following instruction.
    119            */
    120          }
   \                     EXTIE_F_PVD_IRQHandler:
   \                     _interrupt_7:
   \   000000 80           IRET
    121          
    122          /**
    123            * @brief External IT PORTB / PORTG Interrupt routine.
    124            * @param  None
    125            * @retval None
    126            */

   \                                 In section .near_func.text, align 1
    127          INTERRUPT_HANDLER(EXTIB_G_IRQHandler, 6)
    128          {
    129            /* In order to detect unexpected events during development,
    130               it is recommended to set a breakpoint on the following instruction.
    131            */
    132          }
   \                     EXTIB_G_IRQHandler:
   \                     _interrupt_8:
   \   000000 80           IRET
    133          
    134          /**
    135            * @brief External IT PORTD /PORTH Interrupt routine.
    136            * @param  None
    137            * @retval None
    138            */

   \                                 In section .near_func.text, align 1
    139          INTERRUPT_HANDLER(EXTID_H_IRQHandler, 7)
    140          {
    141            /* In order to detect unexpected events during development,
    142               it is recommended to set a breakpoint on the following instruction.
    143            */
    144          }
   \                     EXTID_H_IRQHandler:
   \                     _interrupt_9:
   \   000000 80           IRET
    145          
    146          /**
    147            * @brief External IT PIN0 Interrupt routine.
    148            * @param  None
    149            * @retval None
    150            */

   \                                 In section .near_func.text, align 1
    151          INTERRUPT_HANDLER(EXTI0_IRQHandler, 8)
    152          {
    153            /* In order to detect unexpected events during development,
    154               it is recommended to set a breakpoint on the following instruction.
    155            */
    156          }
   \                     EXTI0_IRQHandler:
   \                     _interrupt_10:
   \   000000 80           IRET
    157          
    158          /**
    159            * @brief External IT PIN1 Interrupt routine.
    160            * @param  None
    161            * @retval None
    162            */

   \                                 In section .near_func.text, align 1
    163          INTERRUPT_HANDLER(EXTI1_IRQHandler, 9)
    164          {
    165            /* In order to detect unexpected events during development,
    166               it is recommended to set a breakpoint on the following instruction.
    167            */
    168          }
   \                     EXTI1_IRQHandler:
   \                     _interrupt_11:
   \   000000 80           IRET
    169          
    170          /**
    171            * @brief External IT PIN2 Interrupt routine.
    172            * @param  None
    173            * @retval None
    174            */

   \                                 In section .near_func.text, align 1
    175          INTERRUPT_HANDLER(EXTI2_IRQHandler, 10)
    176          {
    177            /* In order to detect unexpected events during development,
    178               it is recommended to set a breakpoint on the following instruction.
    179            */
    180          }
   \                     EXTI2_IRQHandler:
   \                     _interrupt_12:
   \   000000 80           IRET
    181          
    182          /**
    183            * @brief External IT PIN3 Interrupt routine.
    184            * @param  None
    185            * @retval None
    186            */

   \                                 In section .near_func.text, align 1
    187          INTERRUPT_HANDLER(EXTI3_IRQHandler, 11)
    188          {
    189            /* In order to detect unexpected events during development,
    190               it is recommended to set a breakpoint on the following instruction.
    191            */
    192          }
   \                     EXTI3_IRQHandler:
   \                     _interrupt_13:
   \   000000 80           IRET
    193          
    194          /**
    195            * @brief External IT PIN4 Interrupt routine.
    196            * @param  None
    197            * @retval None
    198            */

   \                                 In section .near_func.text, align 1
    199          INTERRUPT_HANDLER(EXTI4_IRQHandler, 12)
    200          {
    201            /* In order to detect unexpected events during development,
    202               it is recommended to set a breakpoint on the following instruction.
    203            */
    204          }
   \                     EXTI4_IRQHandler:
   \                     _interrupt_14:
   \   000000 80           IRET
    205          
    206          /**
    207            * @brief External IT PIN5 Interrupt routine.
    208            * @param  None
    209            * @retval None
    210            */

   \                                 In section .near_func.text, align 1
    211          INTERRUPT_HANDLER(EXTI5_IRQHandler, 13)
    212          {
    213            /* In order to detect unexpected events during development,
    214               it is recommended to set a breakpoint on the following instruction.
    215            */
    216          }
   \                     EXTI5_IRQHandler:
   \                     _interrupt_15:
   \   000000 80           IRET
    217          
    218          /**
    219            * @brief External IT PIN6 Interrupt routine.
    220            * @param  None
    221            * @retval None
    222            */

   \                                 In section .near_func.text, align 1
    223          INTERRUPT_HANDLER(EXTI6_IRQHandler, 14)
    224          {
    225            /* In order to detect unexpected events during development,
    226               it is recommended to set a breakpoint on the following instruction.
    227            */
    228          }
   \                     EXTI6_IRQHandler:
   \                     _interrupt_16:
   \   000000 80           IRET
    229          
    230          /**
    231            * @brief External IT PIN7 Interrupt routine.
    232            * @param  None
    233            * @retval None
    234            */

   \                                 In section .near_func.text, align 1
    235          INTERRUPT_HANDLER(EXTI7_IRQHandler, 15)
    236          {
    237            /* In order to detect unexpected events during development,
    238               it is recommended to set a breakpoint on the following instruction.
    239            */
    240          }
   \                     EXTI7_IRQHandler:
   \                     _interrupt_17:
   \   000000 80           IRET
    241          /**
    242            * @brief LCD /AES Interrupt routine.
    243            * @param  None
    244            * @retval None
    245            */

   \                                 In section .near_func.text, align 1
    246          INTERRUPT_HANDLER(LCD_AES_IRQHandler, 16)
    247          {
    248            /* In order to detect unexpected events during development,
    249               it is recommended to set a breakpoint on the following instruction.
    250            */
    251          }
   \                     LCD_AES_IRQHandler:
   \                     _interrupt_18:
   \   000000 80           IRET
    252          /**
    253            * @brief CLK switch/CSS/TIM1 break Interrupt routine.
    254            * @param  None
    255            * @retval None
    256            */

   \                                 In section .near_func.text, align 1
    257          INTERRUPT_HANDLER(SWITCH_CSS_BREAK_DAC_IRQHandler, 17)
    258          {
    259            /* In order to detect unexpected events during development,
    260               it is recommended to set a breakpoint on the following instruction.
    261            */
    262          }
   \                     SWITCH_CSS_BREAK_DAC_IRQHandler:
   \                     _interrupt_19:
   \   000000 80           IRET
    263          
    264          /**
    265            * @brief ADC1/Comparator Interrupt routine.
    266            * @param  None
    267            * @retval None
    268            */

   \                                 In section .near_func.text, align 1
    269          INTERRUPT_HANDLER(ADC1_COMP_IRQHandler, 18)
    270          {
    271            /* In order to detect unexpected events during development,
    272               it is recommended to set a breakpoint on the following instruction.
    273            */
    274          }
   \                     ADC1_COMP_IRQHandler:
   \                     _interrupt_20:
   \   000000 80           IRET
    275          
    276          /**
    277            * @brief TIM2 Update/Overflow/Trigger/Break /USART2 TX Interrupt routine.
    278            * @param  None
    279            * @retval None
    280            */

   \                                 In section .near_func.text, align 1
    281          INTERRUPT_HANDLER(TIM2_UPD_OVF_TRG_BRK_USART2_TX_IRQHandler, 19)
    282          {
    283            /* In order to detect unexpected events during development,
    284               it is recommended to set a breakpoint on the following instruction.
    285            */
    286          }
   \                     TIM2_UPD_OVF_TRG_BRK_USART2_TX_IRQHandler:
   \                     _interrupt_21:
   \   000000 80           IRET
    287          
    288          /**
    289            * @brief Timer2 Capture/Compare / USART2 RX Interrupt routine.
    290            * @param  None
    291            * @retval None
    292            */

   \                                 In section .near_func.text, align 1
    293          INTERRUPT_HANDLER(TIM2_CC_USART2_RX_IRQHandler, 20)
    294          {
    295            /* In order to detect unexpected events during development,
    296               it is recommended to set a breakpoint on the following instruction.
    297            */
    298          }
   \                     TIM2_CC_USART2_RX_IRQHandler:
   \                     _interrupt_22:
   \   000000 80           IRET
    299          
    300          
    301          /**
    302            * @brief Timer3 Update/Overflow/Trigger/Break Interrupt routine.
    303            * @param  None
    304            * @retval None
    305            */

   \                                 In section .near_func.text, align 1
    306          INTERRUPT_HANDLER(TIM3_UPD_OVF_TRG_BRK_USART3_TX_IRQHandler, 21)
    307          {
    308            /* In order to detect unexpected events during development,
    309               it is recommended to set a breakpoint on the following instruction.
    310            */
    311          }
   \                     TIM3_UPD_OVF_TRG_BRK_USART3_TX_IRQHandler:
   \                     _interrupt_23:
   \   000000 80           IRET
    312          /**
    313            * @brief Timer3 Capture/Compare /USART3 RX Interrupt routine.
    314            * @param  None
    315            * @retval None
    316            */

   \                                 In section .near_func.text, align 1
    317          INTERRUPT_HANDLER(TIM3_CC_USART3_RX_IRQHandler, 22)
    318          {
    319            /* In order to detect unexpected events during development,
    320               it is recommended to set a breakpoint on the following instruction.
    321            */
    322          }
   \                     TIM3_CC_USART3_RX_IRQHandler:
   \                     _interrupt_24:
   \   000000 80           IRET
    323          /**
    324            * @brief TIM1 Update/Overflow/Trigger/Commutation Interrupt routine.
    325            * @param  None
    326            * @retval None
    327            */

   \                                 In section .near_func.text, align 1
    328          INTERRUPT_HANDLER(TIM1_UPD_OVF_TRG_COM_IRQHandler, 23)
    329          {
    330            /* In order to detect unexpected events during development,
    331               it is recommended to set a breakpoint on the following instruction.
    332            */
    333          }
   \                     TIM1_UPD_OVF_TRG_COM_IRQHandler:
   \                     _interrupt_25:
   \   000000 80           IRET
    334          /**
    335            * @brief TIM1 Capture/Compare Interrupt routine.
    336            * @param  None
    337            * @retval None
    338            */

   \                                 In section .near_func.text, align 1
    339          INTERRUPT_HANDLER(TIM1_CC_IRQHandler, 24)
    340          {
    341            /* In order to detect unexpected events during development,
    342               it is recommended to set a breakpoint on the following instruction.
    343            */
    344          }
   \                     TIM1_CC_IRQHandler:
   \                     _interrupt_26:
   \   000000 80           IRET
    345          
    346          /**
    347            * @brief TIM4 Update/Overflow/Trigger Interrupt routine.
    348            * @param  None
    349            * @retval None
    350            */

   \                                 In section .near_func.text, align 1
    351          INTERRUPT_HANDLER(TIM4_UPD_OVF_TRG_IRQHandler, 25)
    352          {
   \                     TIM4_UPD_OVF_TRG_IRQHandler:
   \                     _interrupt_27:
   \   000000 8A           PUSH      CC
   \   000001 84           POP       A
   \   000002 A4 BF        AND       A, #0xbf
   \   000004 88           PUSH      A
   \   000005 86           POP       CC
   \   000006 CD ....      CALL      L:?push_l0
   \   000009 CD ....      CALL      L:?push_l1
    353            /* In order to detect unexpected events during development,
    354               it is recommended to set a breakpoint on the following instruction.
    355            */
    356            TIme4_CallBack();
   \   00000C CD ....      CALL      L:TIme4_CallBack
    357            TIM4_ClearITPendingBit( TIM4_IT_Update );
   \   00000F A6 01        LD        A, #0x1
   \   000011 CD ....      CALL      L:TIM4_ClearITPendingBit
    358          }
   \   000014 CD ....      CALL      L:?pop_l1
   \   000017 CD ....      CALL      L:?pop_l0
   \   00001A 80           IRET
    359          /**
    360            * @brief SPI1 Interrupt routine.
    361            * @param  None
    362            * @retval None
    363            */

   \                                 In section .near_func.text, align 1
    364          INTERRUPT_HANDLER(SPI1_IRQHandler, 26)
    365          {
    366            /* In order to detect unexpected events during development,
    367               it is recommended to set a breakpoint on the following instruction.
    368            */
    369          }
   \                     SPI1_IRQHandler:
   \                     _interrupt_28:
   \   000000 80           IRET
    370          
    371          /**
    372            * @brief USART1 TX / TIM5 Update/Overflow/Trigger/Break Interrupt  routine.
    373            * @param  None
    374            * @retval None
    375            */

   \                                 In section .near_func.text, align 1
    376          INTERRUPT_HANDLER(USART1_TX_TIM5_UPD_OVF_TRG_BRK_IRQHandler, 27)
    377          {
    378            /* In order to detect unexpected events during development,
    379               it is recommended to set a breakpoint on the following instruction.
    380            */
    381          }
   \                     USART1_TX_TIM5_UPD_OVF_TRG_BRK_IRQHandler:
   \                     _interrupt_29:
   \   000000 80           IRET
    382          
    383          /**
    384            * @brief USART1 RX / Timer5 Capture/Compare Interrupt routine.
    385            * @param  None
    386            * @retval None
    387            */

   \                                 In section .near_func.text, align 1
    388          INTERRUPT_HANDLER(USART1_RX_TIM5_CC_IRQHandler, 28)
    389          {
    390            /* In order to detect unexpected events during development,
    391               it is recommended to set a breakpoint on the following instruction.
    392            */
    393          }
   \                     USART1_RX_TIM5_CC_IRQHandler:
   \                     _interrupt_30:
   \   000000 80           IRET
    394          
    395          /**
    396            * @brief I2C1 / SPI2 Interrupt routine.
    397            * @param  None
    398            * @retval None
    399            */

   \                                 In section .near_func.text, align 1
    400          INTERRUPT_HANDLER(I2C1_SPI2_IRQHandler, 29)
    401          {
    402            /* In order to detect unexpected events during development,
    403               it is recommended to set a breakpoint on the following instruction.
    404            */
    405          }
   \                     I2C1_SPI2_IRQHandler:
   \                     _interrupt_31:
   \   000000 80           IRET
    406          
    407          /**
    408            * @}
    409            */
    410          
    411          /**
    412            * @}
    413            */
    414          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Section sizes:

   Bytes  Function/Label
   -----  --------------
       1  ADC1_COMP_IRQHandler
       1  DMA1_CHANNEL0_1_IRQHandler
       1  DMA1_CHANNEL2_3_IRQHandler
       1  EXTI0_IRQHandler
       1  EXTI1_IRQHandler
       1  EXTI2_IRQHandler
       1  EXTI3_IRQHandler
       1  EXTI4_IRQHandler
       1  EXTI5_IRQHandler
       1  EXTI6_IRQHandler
       1  EXTI7_IRQHandler
       1  EXTIB_G_IRQHandler
       1  EXTID_H_IRQHandler
       1  EXTIE_F_PVD_IRQHandler
       1  FLASH_IRQHandler
       1  I2C1_SPI2_IRQHandler
       1  LCD_AES_IRQHandler
       1  RTC_CSSLSE_IRQHandler
       1  SPI1_IRQHandler
       1  SWITCH_CSS_BREAK_DAC_IRQHandler
       1  TIM1_CC_IRQHandler
       1  TIM1_UPD_OVF_TRG_COM_IRQHandler
       1  TIM2_CC_USART2_RX_IRQHandler
       1  TIM2_UPD_OVF_TRG_BRK_USART2_TX_IRQHandler
       1  TIM3_CC_USART3_RX_IRQHandler
       1  TIM3_UPD_OVF_TRG_BRK_USART3_TX_IRQHandler
      27  TIM4_UPD_OVF_TRG_IRQHandler
       1  TRAP_IRQHandler
       1  USART1_RX_TIM5_CC_IRQHandler
       1  USART1_TX_TIM5_UPD_OVF_TRG_BRK_IRQHandler

 
 56 bytes in section .near_func.text
 
 56 bytes of CODE memory

Errors: none
Warnings: none
